<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_arm</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//variables
right_down =  (gamepad_axis_value(1,gp_axisrh) &gt; 0) &amp;&amp; (gamepad_axis_value(1,gp_axisrv) &lt; 0);
right_up = (gamepad_axis_value(1,gp_axisrh) &gt; 0) &amp;&amp; (gamepad_axis_value (1,gp_axisrv) &gt; 0);
right =  (gamepad_axis_value(1,gp_axisrh) &gt; 0);

left_down = (gamepad_axis_value (1,gp_axisrh) &lt; 0) &amp;&amp; (gamepad_axis_value(1,gp_axisrv) &lt; 0);
left_up = (gamepad_axis_value (1,gp_axisrh) &lt; 0) &amp;&amp; (gamepad_axis_value(1,gp_axisrv) &gt; 0);
left = (gamepad_axis_value(1,gp_axisrh) &lt; 0);



look_left = obj_player2.image_xscale = -1; //NOT SURE IF I WROTE THIS RIGHT
look_right = obj_player2.image_xscale = 1;

image_angle = direction;

//looking to the right
if (look_right == true)
{

obj_arm2.x = obj_player2.x-5;
obj_arm2.y =obj_player2.y+1;
image_xscale = 1;

if (right == true)
{direction = 0};

if (right_down == true)
{ direction = 45};

if (right_up == true)
{direction = 315};

if (obj_player2.sprite_index = spr_player_duck)
{
obj_arm2.x = obj_player2.x-5;
obj_arm2.y = obj_player2.y+5;
}
if (obj_player2.sprite_index = spr_player_duck_powerup)
{
obj_arm2.x = obj_player2.x+6;
obj_arm2.y = obj_player2.y+17;
}
}


//looking to the left

if (look_left == true)
{

obj_arm2.x = obj_player2.x+5;
obj_arm2.y = obj_player2.y+1;
image_xscale = -1;

if (left == true)
{direction = 0};

if (left_down == true)
{direction = 315};

if (left_up == true)
{direction = 45};

if (obj_player2.sprite_index = spr_player_duck)
{
obj_arm2.x = obj_player2.x+5;
obj_arm2.y = obj_player2.y+5;
}
if (obj_player2.sprite_index = spr_player_duck_powerup)
{
obj_arm2.x = obj_player2.x-6;
obj_arm2.y = obj_player2.y+17;
}
}



if left==true || left_down == true || left_up == true
{
obj_player2.image_xscale = -1;
}
if right==true || right_down == true || right_up == true
{
obj_player2.image_xscale = 1;
}


if(right_down==false &amp;&amp; right_up==false &amp;&amp; right==false &amp;&amp; left_down==false &amp;&amp; left_up==false &amp;&amp; left==false)
{
direction=0;
}

// weapons
if (obj_player2.teleportgun == true)
{
image_index = 1;
}

else
{
image_index = 0;
}



if (obj_player2.sniper == true)
{
image_index = 2;
}

 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
